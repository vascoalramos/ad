-- MySQL Script generated by MySQL Workbench
-- s√°b 31 out 2020 14:08:18
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema covid_korea
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `covid_korea` ;

-- -----------------------------------------------------
-- Schema covid_korea
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `covid_korea` ;
USE `covid_korea` ;

-- -----------------------------------------------------
-- Table `covid_korea`.`dim_age`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `covid_korea`.`dim_age` ;

CREATE TABLE IF NOT EXISTS `covid_korea`.`dim_age` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `age_range` VARCHAR(45) NOT NULL DEFAULT 'N/A',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `age_range_UNIQUE` (`age_range` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `covid_korea`.`dim_sex`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `covid_korea`.`dim_sex` ;

CREATE TABLE IF NOT EXISTS `covid_korea`.`dim_sex` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sex` VARCHAR(45) NOT NULL DEFAULT 'N/A',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `sex_UNIQUE` (`sex` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `covid_korea`.`dim_infection_site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `covid_korea`.`dim_infection_site` ;

CREATE TABLE IF NOT EXISTS `covid_korea`.`dim_infection_site` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `province` VARCHAR(45) NOT NULL DEFAULT 'N/A',
  `city` VARCHAR(45) NOT NULL DEFAULT 'N/A',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `covid_korea`.`dim_origin_country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `covid_korea`.`dim_origin_country` ;

CREATE TABLE IF NOT EXISTS `covid_korea`.`dim_origin_country` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `covid_korea`.`dim_symptomatology`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `covid_korea`.`dim_symptomatology` ;

CREATE TABLE IF NOT EXISTS `covid_korea`.`dim_symptomatology` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `total_duration` INT NULL,
  `recover_after_confirm` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `covid_korea`.`dim_case_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `covid_korea`.`dim_case_info` ;

CREATE TABLE IF NOT EXISTS `covid_korea`.`dim_case_info` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `infection_case` VARCHAR(45) NULL,
  `infected_by` BIGINT NULL,
  `number_of_contacts` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `covid_korea`.`dim_case_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `covid_korea`.`dim_case_state` ;

CREATE TABLE IF NOT EXISTS `covid_korea`.`dim_case_state` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `state` VARCHAR(45) NOT NULL DEFAULT 'N/A',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `covid_korea`.`facts_patient_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `covid_korea`.`facts_patient_info` ;

CREATE TABLE IF NOT EXISTS `covid_korea`.`facts_patient_info` (
  `id` BIGINT NOT NULL,
  `id_dim_age` INT NOT NULL,
  `id_dim_sex` INT NOT NULL,
  `id_dim_infection_site` INT NOT NULL,
  `id_dim_origin_country` INT NOT NULL,
  `id_dim_symptomatology` INT NOT NULL,
  `id_dim_case_info` INT NOT NULL,
  `id_dim_case_state` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_patient_age_idx` (`id_dim_age` ASC) VISIBLE,
  INDEX `fk_patient_sex_idx` (`id_dim_sex` ASC) VISIBLE,
  INDEX `fk_patient_infection_site_idx` (`id_dim_infection_site` ASC) VISIBLE,
  INDEX `fk_patinet_origin_country_idx` (`id_dim_origin_country` ASC) VISIBLE,
  INDEX `fk_patient_case_duration_idx` (`id_dim_symptomatology` ASC) VISIBLE,
  INDEX `fk_patient_case_info_idx` (`id_dim_case_info` ASC) VISIBLE,
  INDEX `fk_patient_case_state_idx` (`id_dim_case_state` ASC) VISIBLE,
  CONSTRAINT `fk_patient_age`
    FOREIGN KEY (`id_dim_age`)
    REFERENCES `covid_korea`.`dim_age` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_sex`
    FOREIGN KEY (`id_dim_sex`)
    REFERENCES `covid_korea`.`dim_sex` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_infection_site`
    FOREIGN KEY (`id_dim_infection_site`)
    REFERENCES `covid_korea`.`dim_infection_site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_origin_country`
    FOREIGN KEY (`id_dim_origin_country`)
    REFERENCES `covid_korea`.`dim_origin_country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_symptomatology`
    FOREIGN KEY (`id_dim_symptomatology`)
    REFERENCES `covid_korea`.`dim_symptomatology` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_case_info`
    FOREIGN KEY (`id_dim_case_info`)
    REFERENCES `covid_korea`.`dim_case_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_case_state`
    FOREIGN KEY (`id_dim_case_state`)
    REFERENCES `covid_korea`.`dim_case_state` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
